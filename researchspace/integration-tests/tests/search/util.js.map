{"version":3,"file":"util.js","sourceRoot":"","sources":["util.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (C) 2015-2017, © Trustees of the British Museum\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, you can receive a copy\n * of the GNU Lesser General Public License from http://www.gnu.org/\n */\n\nimport {By, WebDriver, WebElement, Key} from 'selenium-webdriver';\nimport {Test} from 'tap';\nimport * as QueryString from 'querystring';\nimport * as asyncQ from 'async-q';\nimport * as _ from 'lodash';\nimport * as Url from 'url';\nimport {readFile} from 'mz/fs';\nimport {join} from 'path';\n\nimport {Options} from '../options';\nimport {\n  wait, waitElement, waitPageLoad, waitLoaders, waitChildElement, waitElementRemoved,\n  getText, scrollIntoElement,\n} from '../util';\nimport {get, findOnlyElement, findOnlyChild, setSelectValue} from '../util';\nimport {clickButtonByCaption} from '../util';\nimport {debugElement} from '../util';\n\n// https://bugs.chromium.org/p/chromedriver/issues/detail?id=841\nconst htmlDnD = require('html-dnd');\n\nexport type DateFormat = 'Date' | 'DateRange' | 'DateDeviation' | 'Year' | 'YearRange' | 'YearDeviation'\nconst dateFormatItemClasses: { [format: string]: number; } = {\n  'Date': 0,\n  'DateRange': 1,\n  'DateDeviation': 2,\n  'Year': 3,\n  'YearRange': 4,\n  'YearDeviation': 5\n};\n\nexport class Search {\n  private driver: WebDriver;\n  private t: Test;\n\n  constructor(driver: WebDriver, t: Test) {\n    this.driver = driver;\n    this.t = t;\n    //enableDnD(driver, 1000);\n  }\n  \n  /**\n   * Start new search\n   */\n  async startSearch(url: string) {\n    await get(this.driver, url);\n    await waitElement(this.driver, '.QueryBuilder--searchArea');\n  }\n  \n  /**\n   * Select item from dropdown list\n   * @param parentSelector selector for the frame\n   * @param childSelector selector for item\n   * @param childName text of the child to find\n   */\n  private async selectItem(parentSelector: string, childSelector: string, childName: string) {\n    const parent = await findOnlyElement(this.driver, this.t, parentSelector);\n    const items = await parent.findElements(By.css(childSelector));\n    for (let item of items) {\n      const itemText = await getText(item);\n      if (itemText === childName) {\n        await item.click();\n        return;\n      }\n    }\n    await this.t.ok(false, `item should exist`);\n  }\n\n  /**\n   * Set domain\n   * @param domain domain\n   */\n  async setDomain(domain: string) {\n    await this.selectItem('.QueryBuilder--domainSelection', '.QueryBuilder--categorySelectionItem', domain);\n  }\n\n  /**\n   * Set range\n   * @param range range\n   */\n  async setRange(range: string) {\n    await this.selectItem('.QueryBuilder--rangeSelection', '.QueryBuilder--categorySelectionItem', range);\n  }\n\n  /**\n   * Set relation\n   * @param relation relation\n   */\n  async setRelation(relation: string) {\n    await this.selectItem('.QueryBuilder--relationSelector', '.ItemSelector--itemHolder', relation);\n  }\n  \n  /**\n   * Select date input format\n   * @param name either of Date, DateRange, DateDeviation, Year, YearRange, YearDeviation\n   */\n  async setDateFormat(name: DateFormat) {\n    const parent = await findOnlyElement(this.driver, this.t, '.DateFormatSelector--holder');\n    const placeholder = await findOnlyChild(this.driver, this.t, parent, '.Select-placeholder');\n    await placeholder.click();\n    const item = (await parent.findElements(By.css('.Select-option')))[dateFormatItemClasses[name]];\n    await item.click();\n  }\n\n\n  /**\n   * Set year into a year selection control\n   */\n  async setYearByElement(t: Test, element: WebElement, value: string) {\n    const parts = value.split(\"/\");\n    await t.ok(parts.length == 2, 'year and era are separated by slash');\n    const year = parts[0], era = parts[1];\n    const input = await findOnlyChild(this.driver, t, element, 'input');\n    await scrollIntoElement(this.driver, input);\n    await input.sendKeys(year);\n    if (era !== 'AD') {\n      const select = await findOnlyChild(this.driver, t, element, 'select');\n      await scrollIntoElement(this.driver, select);\n      await setSelectValue(this.driver, t, select, era.toUpperCase());\n    }\n  }\n\n  /**\n   * Set year range\n   * @param from eariler year\n   * @param upto latter year\n   */\n  async setYearRange(from: string, upto: string) {\n    const elements = await this.driver.findElements(By.css('.YearInput--holder'));\n    await this.t.ok(elements.length == 2, `date range has two inputs`);\n    await this.setYearByElement(this.t, elements[0], from);\n    await this.setYearByElement(this.t, elements[1], upto);\n    await this.clickDateSelectButton();\n  }\n  \n  /**\n   * Set year\n   * @param exact the only value\n   */\n  async setYear(exact: string) {\n    const elements = await this.driver.findElements(By.css('.YearInput--holder'));\n    await this.t.ok(elements.length == 1, `date range has two inputs`);\n    await this.setYearByElement(this.t, elements[0], exact);\n    await this.clickDateSelectButton();\n  }\n\n  async clickDateSelectButton() {\n    const button = await findOnlyElement(this.driver, this.t, '.DateFormatSelector--inputHolder .btn');\n    await scrollIntoElement(this.driver, button);\n    await wait(500);\n    await button.click();\n  }\n  \n  // identifiers of already found clauses\n  private knownClauses: {[clause: string]: boolean} = {};\n\n  /**\n   * Get last added clause\n   */\n  public async getLastClause() {\n    await this.getNumResults();\n    const newClauses = await this.driver.findElements(By.css('.QueryBuilder--searchClause'));\n    const addedClauses = await asyncQ.filterSeries(newClauses, async (newClause: WebElement) => \n      !this.knownClauses[await newClause.getAttribute('id')]\n    );\n    const id = await addedClauses[0].getAttribute('id');\n    this.knownClauses[id] = true;\n    return `#${id}`;\n  }\n  \n  private async hoverAndClick(elementToHover: WebElement, button: WebElement) {\n    await this.driver.actions().mouseMove(elementToHover).perform();\n    await wait(200);\n    await button.click();\n  }\n\n  /**\n   * Press \"and\" or \"or\" button\n   * @param clause clause id\n   * @param selecor selector for given type of button\n   */\n  private async addClause(clause: string, selector: string) {\n    const parent = await findOnlyElement(this.driver, this.t, clause);\n    // hovering mouse over remove button to make conjunct/disjunct addition visible\n    const removeButton = await findOnlyChild(\n      this.driver, this.t, parent, '.QueryBuilder--removeConjunctButton'\n    );\n    const button = await findOnlyChild(this.driver, this.t, parent, selector);\n    await this.hoverAndClick(removeButton, button);\n  }\n\n  /**\n   * Add \"or\" (disjunctive) clause\n   * @param clause parent clause id\n   */\n  addOrClause(clause: string) {\n    return this.addClause(clause, '.QueryBuilder--addDisjunctButton');\n  }\n\n  /**\n   * Add \"and\" (conjunctive) clause\n   * @param clause parent clause id\n   */\n  addAndClause(clause: string) {\n    return this.addClause(clause, '.QueryBuilder--addConjunctButton');\n  }\n  \n  private async findSet(nameOfSet: string) {\n    await waitElement(this.driver, '.set-management__set-caption span > span');\n    await wait(500);\n    const items = await asyncQ.filterSeries(\n      await this.driver.findElements(By.css('.set-management__set-caption span > span')),\n      async (element: WebElement) => await getText(element) == nameOfSet\n    );\n    await this.t.ok(items.length == 1, `only one set in clipboard with name \"${nameOfSet}\" (got ${items.length})`);\n    return items[0];\n  }\n\n  /**\n   * Type into the range field (if search)\n   * @param value text to write\n   */\n  async typeRange(value: string) {\n    const input = await findOnlyElement(this.driver, this.t, '.QueryBuilder--searchBasedTermSelector input');\n    await input.sendKeys(value);\n  }\n\n  /**\n   * Type into the range text search and click 'Find Text'\n   * @param value text to write\n   */\n  async typeTextRange(value: string) {\n    const input = await findOnlyElement(this.driver, this.t, '.TextSelection--inputGroup input');\n    await input.sendKeys(value);\n    const button = await findOnlyElement(this.driver, this.t, '.btn-primary');\n    await button.click();\n  }\n\n\n  /**\n   * Fill range with a set\n   */\n  async fillRangeFromSet(nameOfSet: string) {\n    const setSpan = await this.findSet(nameOfSet);\n    const draggable = await this.driver.executeScript(`return arguments[0].parentNode.parentNode.parentNode.parentNode.parentNode;`, setSpan) as WebElement;\n    let droppables = [];\n    droppables = await this.driver.findElements(By.css('.SemanticTreeInput--holder.QueryBuilder--hierarchySelector')) as WebElement[];\n    if (droppables.length == 0) {\n      droppables = await this.driver.findElements(By.css('.QueryBuilder--resourceSelector')) as WebElement[];\n    }\n    this.t.ok(droppables.length == 1, 'there should be an item to drop onto');\n    const droppable = droppables[0];\n    await debugElement(draggable, 'set');\n    await debugElement(droppable, 'input');\n    const storeId = await this.driver.executeAsyncScript(htmlDnD.dragCode, draggable) as number;\n    await wait(1000);\n    await this.driver.executeScript(htmlDnD.dropCode, storeId, droppable);\n  }\n\n  /**\n   * Select from one of the options in list dropdown\n   * @param value text of the option\n   */\n  async selectRange(value: string) {\n    await waitElement(this.driver, '.QueryBuilder--searchBasedTermSelector .Select-option');\n    const element = await findOnlyElement(this.driver, this.t, `.QueryBuilder--searchBasedTermSelector .Select-option span[title=\"${value}\"]`);\n    await element.click();\n  }\n\n  /**\n   * Toggle the node in dropdown tree\n   * @param value text on the node\n   */\n  async toggleRangeNode(value: string) {\n    await waitElement(this.driver, '.LazyTreeSelector--itemExpanded > div > span, .LazyTreeSelector--itemCollapsed > div > span');\n    const items = await this.driver.executeScript(`\n      return (function (value) {\n        return Array.prototype.slice.call(\n          document.querySelectorAll(\n            '.LazyTreeSelector--itemExpanded > div > span, .LazyTreeSelector--itemCollapsed > div > span'\n          )\n        ).filter(function (element) {\n          return element.textContent == value;\n        });\n      })(arguments[0]);\n    `, value) as WebElement[];\n    const checkboxes = await this.driver.executeScript(`\n      return Array.prototype.slice.call(\n        arguments[0].parentNode.parentNode.children\n      ).filter(x => x.tagName.toLowerCase() == 'input');\n    `, items[0]) as WebElement[];\n    await scrollIntoElement(this.driver, checkboxes[0]);\n    await checkboxes[0].click();\n  }\n\n  /**\n   * Close dropdown tree\n   */\n  async submitRangeTree() {\n    const buttons = await asyncQ.filterSeries(\n      await this.driver.findElements(By.css('.SemanticTreeInput--dropdownButton')),\n      async (element: WebElement) => await getText(element) == 'Select'\n    );\n    await this.t.ok(buttons.length == 1, `only one Select button (got ${buttons.length})`);\n    await buttons[0].click();\n  }\n  \n  /**\n   * Get search results from \"Table\" view. Scan all pages.\n   */\n  async getSearchResults() {\n    const numResults = await this.getNumResults();\n    await waitElement(this.driver, '#search-results .nav.nav-tabs li');\n    await this.switchResultMode('Table');\n    await waitLoaders(this.driver);\n    const results = [];\n    results.push(await this.getSearchResultsPage());\n    const limit = numResults == null ? 100 : Math.ceil(numResults / 10) - 1;\n    if (limit !== 0) {\n      const button = await this.findNextPageBtn();\n      await scrollIntoElement(this.driver, button);\n    }\n    for (let i = 0; i < limit; ++i) {\n      const button = await this.findNextPageBtn();\n      const btnClass = await button.getAttribute('class');\n      if (btnClass === 'disabled') {\n        break;\n      }\n      await button.click();\n      results.push(await this.getSearchResultsPage());\n    }\n    const output = _.flatten(results).sort();\n    await this.t.equal(numResults, output.length, `correct number of results`);\n    return output;\n  }\n\n  /**\n   * Sanity check: number of results must be as shown\n   */\n  public async getNumResults() {\n    await wait(500); // wait to make sure that we don't check old results\n    await waitLoaders(this.driver);\n    await waitElement(this.driver, '.num-results');\n    const element = await findOnlyElement(this.driver, this.t, '.num-results');\n    if (!element) return;\n    const text = await getText(element);\n    const matches = text.match(/^Found ([0-9]+) matches$/);\n    await this.t.ok(matches != null, `correct message with result count`);\n    if (matches == null) return null;\n    return parseInt(matches[1], 10);\n  }\n  \n  /**\n   * Switch mode in which search results are displayed\n   * @param mode text on the tab that enables the mode\n   */\n  private async switchResultMode(mode: string) {\n    const tabs = await this.driver.findElements(By.css('#search-results .nav.nav-tabs li'));\n    const tableTabs = await asyncQ.filterSeries(tabs, async (tab: WebElement) => await getText(tab) == mode);\n    await this.t.ok(tableTabs.length == 1, `only one ${mode} tab (got ${tableTabs.length})`);\n    const tableTab = tableTabs[0];\n    await scrollIntoElement(this.driver, tableTab);\n    await tableTab.click();\n    await wait(200);\n  }\n  \n  /**\n   * Find a button that goes to next page in paginator\n   */\n  private async findNextPageBtn() {\n    await waitElement(this.driver, '.pagination li a span');\n    const pageNavs = await asyncQ.filterSeries(\n      await this.driver.findElements(By.css('.pagination li a span')),\n      async (nav: WebElement) => await getText(nav) == '»'\n    );\n    const result = await this.driver.executeScript(`return arguments[0].parentNode.parentNode;`, pageNavs[0]) as WebElement;\n    return result;\n  }\n  \n  /**\n   * Ge one page of search results\n   */\n  private async getSearchResultsPage() {\n    await waitElement(this.driver, '#search-results a[href^=\"/resource/\"]');\n    await wait(300);\n    const elements = await this.driver.findElements(By.css('#search-results a[href^=\"/resource/\"]'));\n    const hrefs = await this.driver.executeScript(`\n      return Array.prototype.slice.call(arguments[0]).map(function (element) {\n        return element.getAttribute('href');\n      });\n    `, elements) as string[];\n    const uris = hrefs.map(href => {\n      const url = Url.parse(href);\n      if (url.query) {\n        return `<${QueryString.parse(url.query)['uri']}>`;\n      } else if (url.path) {\n        const path = url.path.split('/');\n        return decodeURIComponent(path[path.length - 1]);\n      } else {\n        this.t.ok(false, `result url is parseable`);\n      }\n    });\n    return uris;\n  }\n  \n  /**\n   * Remove \"and\" (conjunctive) clause\n   */\n  async removeConjunct(text: string) {\n    await this.removeClause(text);\n    const buttons = await asyncQ.filterSeries(\n      await this.driver.findElements(By.css('.QueryBuilder--removeConjunctButton')),\n      async (button: WebElement) => await getText(button) == 'cancel'\n    );\n    await this.t.ok(buttons.length == 1, `only one button to cancel conjunction edit (got ${buttons.length})`);\n    await buttons[0].click();\n  }\n  \n  /**\n   * Remove any part of any clause by name\n   * @param text text on the part; must be unique\n   */\n  private async removeClause(text: string) {\n    const clause = await this.findClause(text);\n    const button = await findOnlyChild(this.driver, this.t, clause, '.QueryBuilder--editButton');\n    await this.driver.actions().mouseMove(button).perform();\n    await button.click();\n  }\n  \n  /**\n   * Find search clause by its text (disregarding the type)\n   * @param text text on the part; must be unique\n   */\n  private async findClause(text: string) {\n    const elements = await this.driver.findElements(By.css('.QueryBuilder--itemHolder'));\n    const clauses = await asyncQ.filterSeries(elements, async (element: WebElement) => {\n      return await getText(element) === text;\n    });\n    await this.t.ok(clauses.length == 1, `only one clause with such text`);\n    return clauses[0];\n  }\n  \n  /**\n   * Start nested search\n   */\n  async startNestedSearch() {\n    const button = await findOnlyElement(this.driver, this.t, '.QueryBuilder--nestedSearchButton');\n    await button.click();\n  }\n  \n  /**\n   * Show filter facet\n   */\n  async showFacet() {\n    const button = await findOnlyElement(this.driver, this.t, '.show-facet-button');\n    await button.click();\n    await waitElement(this.driver, '.facet');\n  }\n  \n  /**\n   * Filter nodes by text on them, counts ignored\n   * @param list array of elements\n   * @param name text to find\n   */\n  private async filterByName(list: WebElement[], name: string) {\n    return await asyncQ.filterSeries(\n      list,\n      async (item: WebElement) => {\n        const text = await getText(item);\n        const matches = text.match(/^(.*) \\([0-9]+\\)$/);\n        return matches != null && matches[1] == name;\n      }\n    );\n  }\n  \n  /**\n   * Choose relation in search facet\n   * @param name relation name\n   * @return relation parent element\n   */\n  async openFacetRelation(name: string) {\n    const relations = await this.filterByName(\n      await this.driver.findElements(By.css('.facet-relation__content')),\n      name\n    );\n    await this.t.ok(relations.length == 1, `only one \"${name}\" relation (got ${relations.length})`);\n    const relation = await this.driver.executeScript(`return arguments[0].parentNode.parentNode;`, relations[0]) as WebElement;\n    const icon = await relation.findElements(By.css('.facet__relation__header__icon'));\n    if (icon.length == 1) {\n      await scrollIntoElement(this.driver, relation);\n      await relation.click();\n      await waitChildElement(relation, '.facet__relation__values');\n    }\n    return await this.driver.executeScript(`return arguments[0].parentNode;`, relation) as WebElement;\n  }\n  \n  /**\n   * Find checkbox inside of relation accordion in search facet\n   * @param relation element that contains relation accordion\n   * @param name text on checkbox\n   */\n  async clickFacetCheckbox(relation: WebElement, name: string) {\n    const input = await findOnlyChild(this.driver, this.t, relation, '.facet__relation__values__filter > input');\n    await input.sendKeys(name);\n    await waitElement(this.driver, '.facet__relation__values__value.checkbox');\n    const checkboxes = await this.filterByName(\n      await relation.findElements(By.css('.facet__relation__values__value.checkbox')),\n      name\n    );\n    await this.t.ok(checkboxes.length == 1, `only one \"${name}\" checkbox (got ${checkboxes.length})`);\n    await scrollIntoElement(this.driver, checkboxes[0]);\n    await checkboxes[0].click();\n  }\n\n  async saveSet(nameOfSet: string) {\n    await clickButtonByCaption(this.driver, this.t, 'Save As Set');\n    const input = await findOnlyElement(this.driver, this.t, '.save-as-dataset-modal__form__collection-name');\n    await input.sendKeys(nameOfSet);\n    const submit = await findOnlyElement(this.driver, this.t, '.save-as-dataset-modal__form__save-button');\n    await submit.click();\n    await waitElement(this.driver, '.set-management__set');\n  }\n\n  async deleteSet(nameOfSet: string) {\n    const setSpan = await this.findSet(nameOfSet);\n    const parent = await this.driver.executeScript(`return arguments[0].parentNode.parentNode.parentNode;`, setSpan) as WebElement;\n    const button = await findOnlyChild(this.driver, this.t, parent, 'button');\n    await this.hoverAndClick(setSpan, button);\n    const links = await asyncQ.filterSeries(\n      await parent.findElements(By.css('a')),\n      async (element: WebElement) => await getText(element) == 'Remove set'\n    );\n    this.t.ok(links.length == 1, `only one link to remove set (got ${links.length})`);\n    await links[0].click();\n    const yesButtons = await asyncQ.filterSeries(\n      await parent.findElements(By.css('.btn-toolbar > button')),\n      async (element: WebElement) => await getText(element) == 'yes'\n    );\n    this.t.ok(yesButtons.length == 1, `only one yes button (got ${yesButtons.length})`);\n    const yesButton = yesButtons[0];\n    await yesButton.click();\n    await waitElementRemoved(this.driver, '.dropdown.open.btn-group.btn-group-link');\n  }\n}\n\nexport class DatasetLoader {\n  private ds: string;\n  constructor(ds: string) {\n    this.ds = ds;\n  }\n  /**\n   * Read JSON data from file\n   * @param fileName name of the file\n   */\n  async readData(fileName: string) {\n    return JSON.parse(await readFile(join(__dirname, '..', '..', 'data', this.ds, fileName + '.json'), {encoding: 'utf8'}))\n  }\n}\n\n/**\n * Setup search\n */\nexport async function testSearch(\n  driver: WebDriver, \n  t: Test, \n  options: Options, \n  f: (arg: Search, d: DatasetLoader) => Promise<any>\n) {\n  const d = new DatasetLoader(options.dataset);\n  const s = new Search(driver, t);\n  await s.startSearch(options.searchUrl);\n  await f(s, d);\n}\n\n/**\n * Setup search by example\n */\nexport async function testByExample<T>(\n  driver: WebDriver,\n  t: Test,\n  options: Options,\n  examples: { [key: string]: T; },\n  f: (arg: Search, d: DatasetLoader, example: T) => Promise<any>\n) {\n  await asyncQ.mapSeries(_.toPairs(examples), async ([key, example]: [string, T]) => {\n    await t.test(`${key}`, async (t: Test) => await testSearch(driver, t, options, async (s, d) => {\n      await f(s, d, example);\n    }));\n  });\n}\n"]}