{"version":3,"file":"util.js","sourceRoot":"","sources":["util.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (C) 2015-2017, Â© Trustees of the British Museum\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, you can receive a copy\n * of the GNU Lesser General Public License from http://www.gnu.org/\n */\n\n/**\n * @author Philip Polkovnikov\n * @author Artem Kozlov <ak@metaphacts.com>\n */\n\nimport {WebDriver, By, WebElement, until, Condition} from 'selenium-webdriver';\nimport * as asyncQ from 'async-q';\nimport {Test} from 'tap';\nimport * as _ from 'lodash';\n/**\n * Print element into browser's developer console. More descriptive than `console.log` in Node.js\n * @param element element to print\n * @param mark optional description\n */\nexport async function debugElement(element: WebElement, mark: string = \"\") {\n  const driver = element.getDriver();\n  await driver.executeScript(`\n    console.log(arguments[0], arguments[1]);\n  `, mark, element);\n}\n\n/**\n * Test if two arrays are same up to reordering\n * @param t parent test object\n * @param set1 first set\n * @param set2 second set\n */\nexport async function sameSets<T>(t: Test, set1: T[], set2: T[]) {\n  await t.same(set1.sort(), set2.sort());\n}\n\n/**\n * Sleep\n * @param time sleep time in milliseconds\n */\nexport const wait = (time: number) => new Promise((resolve, reject) => setTimeout(resolve, time));\n\n/**\n * Wait until the page is loaded\n */\nexport async function waitPageLoad(driver: WebDriver) {\n  for (;;) {\n    const result = await driver.executeScript('return document.readyState');\n    if (result == \"complete\") break;\n    await wait(100);\n  }\n}\n\n/**\n * Find element, ensure it's the only one\n */\nexport async function findOnlyElement(driver: WebDriver, t: Test, selector: string) {\n  const elements = await driver.findElements(By.css(selector));\n  await t.ok(elements.length == 1, `only one element of ${selector} type (got ${elements.length})`);\n  return elements[0];\n}\n\n/**\n * Find element inside of parent, ensure it's the only one\n */\nexport async function findOnlyChild(driver: WebDriver, t: Test, parent: WebElement, selector: string) {\n  const elements = await parent.findElements(By.css(selector));\n  await t.ok(elements.length == 1, `only one child element of ${selector} type (got ${elements.length})`);\n  return elements[0];\n}\n\n/**\n * Fill input field by field name\n */\nexport async function setInputValueByName(driver: WebDriver, t: Test, name: string, value: string) {\n  const input = await findOnlyElement(driver, t, `input[name=${name}]`);\n  return await input.sendKeys(value);\n}\n\n/**\n * Fill input field by selector\n */\nexport async function setInputValueBySelector(driver: WebDriver, t: Test, selector: string, value: string) {\n  const input = await findOnlyElement(driver, t, selector);\n  return await input.sendKeys(value);\n}\n\n/**\n * Submit form\n */\nexport async function submit(driver: WebDriver, t: Test) {\n  const button = await findOnlyElement(driver, t, 'input[type=submit]');\n  await button.click();\n}\n\n/**\n * Open page and wait for its contents to load\n */\nexport async function get(driver: WebDriver, url: string) {\n  await driver.get(url);\n  await waitPageLoad(driver);\n}\n\n/**\n * Wait for an element to show on the page\n */\nexport async function waitElement(driver: WebDriver, selector: string) {\n  await driver.wait(\n    until.elementLocated(By.css(selector)),\n    30000\n  );\n}\n\n/**\n * Wait for a child element to show on the page\n */\nexport async function waitChildElement(parent: WebElement, selector: string) {\n  await awaitFor(parent.getDriver(), async () => \n    (await parent.findElements(By.css(selector))).length == 0\n  );\n}\n\n/**\n * Wait for an element to disappear from the page\n */\nexport async function waitElementRemoved(driver: WebDriver, selector: string) {\n  await awaitFor(driver, async () => \n    (await driver.findElements(By.css(selector))).length == 0\n  );\n}\n\n/**\n * Wait for arbitrary condition\n */\nexport async function awaitFor(driver: WebDriver, condition: () => Promise<boolean>) {\n  await driver.wait(\n    new Condition<void>('for element to be located <element>', condition),\n    30000\n  );\n}\n\n/**\n * Set value in <select>\n */\nexport async function setSelectValue(driver: WebDriver, t: Test, element: WebElement, value: string) {\n  await element.sendKeys(value);\n  // await element.click();\n  // const option = await findOnlyChild(driver, t, element, `option[value='${value}']`)\n  // await option.click();\n}\n\n/**\n * Authorize user\n */\nexport async function authorize(driver: WebDriver, t: Test, url: string, username: string, password: string) {\n  await get(driver, url);\n  await setInputValueByName(driver, t, 'username', username);\n  await setInputValueByName(driver, t, 'password', password);\n  await submit(driver, t);\n}\n\n/**\n * Wait until all loaders on the page disappear\n */\nexport async function waitLoaders(driver: WebDriver) {\n  await waitElementRemoved(driver, '.system-spinner');\n}\n\n/**\n * Press on a button by a text on it\n */\nexport async function clickButtonByCaption(driver: WebDriver, t: Test, caption: string) {\n  const items = await asyncQ.filterSeries(\n    await driver.findElements(By.css('button')),\n    async (element: WebElement) => await element.getText() == caption\n  );\n  t.ok(items.length == 1, `only one button with \"${caption}\" text (got ${items.length})`);\n  await scrollIntoElement(driver, items[0]);\n  await items[0].click();\n}\n\nexport async function getText(element: WebElement) {\n  // we need to trim the text because of https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/5569343/\n  const text = await element.getText();\n  return _.trim(text);\n}\n\nexport async function scrollIntoElement(driver: WebDriver, element: WebElement) {\n  await driver.executeScript(\n    'arguments[0].scrollIntoView(false)',\n    element\n  );\n  await wait(200);\n}\n"]}