{"version":3,"file":"1.js","sourceRoot":"","sources":["1.ts"],"names":[],"mappings":";;;AAqBA,kCAAqC;AACrC,qCAAsC;AAKtC,gBAA6B,MAAiB,EAAE,IAAU,EAAE,OAAgB;;QAC1E,MAAM,IAAI,CAAC,IAAI,CACb,uFAAuF,EACvF,CAAO,CAAO;YAAK,MAAM,CAAN,MAAM,iBAAU,CAAC,MAAM,EAAE,CAAC,EAAE,OAAO,EAAE,CAAO,CAAC,EAAE,CAAC;gBACjE,MAAM,CAAC,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;gBAC3B,MAAM,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;gBAC1B,MAAM,CAAC,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;gBACnC,MAAM,CAAC,CAAC,SAAS,CAAC,+BAA+B,CAAC,CAAC;gBACnD,MAAM,CAAC,CAAC,WAAW,CAAC,2DAA2D,CAAC,CAAC;gBAEjF,MAAM,OAAO,GAAG,MAAM,CAAC,CAAC,gBAAgB,EAAE,CAAC;gBAC3C,MAAM,eAAQ,CAAC,CAAC,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;YACpD,CAAC,CAAA,CAAC,CAAA;UAAA,CAAC,CAAC;IACR,CAAC;CAAA;AAbD,wBAaC","sourcesContent":["/*\n * Copyright (C) 2015-2017, Â© Trustees of the British Museum\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, you can receive a copy\n * of the GNU Lesser General Public License from http://www.gnu.org/\n */\n\nimport { WebDriver } from 'selenium-webdriver';\nimport { Test } from 'tap';\nimport { Options } from '../../options';\nimport { testSearch } from '../util';\nimport { sameSets } from '../../util';\n\n/**\n * @author Artem Kozlov <ak@metaphacts.com>\n */\nexport async function test_1(driver: WebDriver, test: Test, options: Options) {\n  await test.test(\n    '1) Find: Things acquired by Department of Greek and Roman Antiquities, British Museum',\n    async (t: Test) => await testSearch(driver, t, options, async (s, d) => {\n      await s.setDomain('Thing');\n      await s.setRange('Actor');\n      await s.setRelation('acquired by');\n      await s.typeRange('Department of Greek and Roman');\n      await s.selectRange('Department of Greek and Roman Antiquities, British Museum');\n\n      const results = await s.getSearchResults();\n      await sameSets(t, results, await d.readData('1'));\n    }));\n}\n"]}