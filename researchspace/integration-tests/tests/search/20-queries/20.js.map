{"version":3,"file":"20.js","sourceRoot":"","sources":["20.ts"],"names":[],"mappings":";;;AAqBA,kCAAqC;AACrC,qCAAsC;AAKtC,iBAA8B,MAAiB,EAAE,IAAU,EAAE,OAAgB;;QAC3E,MAAM,IAAI,CAAC,IAAI,CACb,sHAAsH,EACtH,CAAO,CAAO;YAAK,MAAM,CAAN,MAAM,iBAAU,CAAC,MAAM,EAAE,CAAC,EAAE,OAAO,EAAE,CAAO,CAAC,EAAE,CAAC;gBACjE,MAAM,CAAC,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;gBAC3B,MAAM,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;gBAC1B,MAAM,CAAC,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;gBACjC,MAAM,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;gBAC5B,MAAM,CAAC,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;gBAClC,MAAM,CAAC,CAAC,eAAe,EAAE,CAAC;gBAC1B,MAAM,EAAE,GAAG,MAAM,CAAC,CAAC,aAAa,EAAE,CAAC;gBAEnC,MAAM,CAAC,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;gBACxB,MAAM,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;gBAC5B,MAAM,CAAC,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;gBAClC,MAAM,CAAC,CAAC,eAAe,EAAE,CAAC;gBAE1B,MAAM,CAAC,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;gBACxB,MAAM,CAAC,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;gBAC3B,MAAM,CAAC,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;gBACjC,MAAM,CAAC,CAAC,eAAe,EAAE,CAAC;gBAE1B,MAAM,CAAC,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;gBACzB,MAAM,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;gBAC1B,MAAM,CAAC,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;gBACnC,MAAM,CAAC,CAAC,SAAS,CAAC,0BAA0B,CAAC,CAAC;gBAC9C,MAAM,CAAC,CAAC,WAAW,CAAC,0BAA0B,CAAC,CAAC;gBAChD,MAAM,EAAE,GAAG,MAAM,CAAC,CAAC,aAAa,EAAE,CAAC;gBAEnC,MAAM,CAAC,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;gBACxB,MAAM,CAAC,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;gBAC9B,MAAM,CAAC,CAAC,WAAW,CAAC,8BAA8B,CAAC,CAAC;gBAEpD,MAAM,CAAC,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;gBACzB,MAAM,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;gBAC1B,MAAM,CAAC,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;gBACjC,MAAM,CAAC,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;gBAC9B,MAAM,CAAC,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;gBAEhC,MAAM,OAAO,GAAG,MAAM,CAAC,CAAC,gBAAgB,EAAE,CAAC;gBAC3C,MAAM,eAAQ,CAAC,CAAC,EAAE,OAAO,EAAE;oBACzB,uEAAuE;oBACvE,sEAAsE;oBACtE,kFAAkF;oBAClF,mFAAmF;oBACnF,yEAAyE;iBAC1E,CAAC,CAAC;YACL,CAAC,CAAA,CAAC,CAAA;UAAA,CAAC,CAAC;IACR,CAAC;CAAA;AAhDD,0BAgDC","sourcesContent":["/*\n * Copyright (C) 2015-2017, Â© Trustees of the British Museum\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, you can receive a copy\n * of the GNU Lesser General Public License from http://www.gnu.org/\n */\n\nimport { WebDriver } from 'selenium-webdriver';\nimport { Test } from 'tap';\nimport { Options } from '../../options';\nimport { testSearch } from '../util';\nimport { sameSets } from '../../util';\n\n/**\n * @author Artem Kozlov <ak@metaphacts.com>\n */\nexport async function test_20(driver: WebDriver, test: Test, options: Options) {\n  await test.test(\n    '20) Find: Actors refers to Greece or Cyprus or Egypt and is owner of The Parthenon Sculptures and refers to Pericles',\n    async (t: Test) => await testSearch(driver, t, options, async (s, d) => {\n      await s.setDomain('Actor');\n      await s.setRange('Place');\n      await s.setRelation('refers to');\n      await s.typeRange('Greece');\n      await s.toggleRangeNode('Greece');\n      await s.submitRangeTree();\n      const c1 = await s.getLastClause();\n\n      await s.addOrClause(c1);\n      await s.typeRange('Cyprus');\n      await s.toggleRangeNode('Cyprus');\n      await s.submitRangeTree();\n\n      await s.addOrClause(c1);\n      await s.typeRange('Egypt');\n      await s.toggleRangeNode('Egypt');\n      await s.submitRangeTree();\n\n      await s.addAndClause(c1);\n      await s.setRange('Thing');\n      await s.setRelation('is owner of');\n      await s.typeRange('The Parthenon Sculptures');\n      await s.selectRange('The Parthenon Sculptures');\n      const c2 = await s.getLastClause();\n\n      await s.addOrClause(c2);\n      await s.typeRange('Minotaur');\n      await s.selectRange('Minotaur, gold (2011,4143.2)');\n\n      await s.addAndClause(c2);\n      await s.setRange('Actor');\n      await s.setRelation('refers to');\n      await s.typeRange('Pericles');\n      await s.selectRange('Pericles');\n\n      const results = await s.getSearchResults();\n      await sameSets(t, results, [\n        '<http://collection.britishmuseum.org/id/thesauri/nationality/British>',\n        '<http://collection.britishmuseum.org/id/thesauri/nationality/French>',\n        '<http://collection.britishmuseum.org/id/thesauri/profession/painter/draughtsman>',\n        '<http://collection.britishmuseum.org/id/thesauri/profession/politician/statesman>',\n        '<http://collection.britishmuseum.org/id/thesauri/profession/printmaker>'\n      ]);\n    }));\n}\n"]}